import unittest

from playfair.src.playfair import Playfair
from playfair.cracking_code import cracking


class TestCracking(unittest.TestCase):
    text = "THEQUIETMOONCASTSOFTSHADOWSUPONTHEFIELDSASTHEWINDRUSTLESTHELEAVESINTHEANCIENTOAKSTREESASTHENIGHTDEEPENSTHEWORLDSLUMBERSANDTHEDREAMSFLITTERTHROUGHTHEAIRLIKEDELICATEBUTTERFLIESUNSEENTHEFORESTSTANDSMAJESTICITSBRANCHESREACHINGHIGHINTOTHENIGHTSKYASTARSGLIMMERLIKEFIREFLIESCAPTUREDINTHESILKENWEBOFTHEDARKNESSNEARTHESTREAMTHEWATERTRICKLESOVERROUNDSTONESCREATINGAMUSICTHATONLYTHENIGHTKNOWSTHEOWLHOOTSACALLTOITSMATEANDTHETIMIDDEERPEEKSFROMTHEIRSHELTERINTHETALLGRASSKNOWINGSAFETYLYESINTHECONCEALMENTOFTHESHADOWSTHEEARTHISALIVEWITHTHEQUIETENERGYOFTHENIGHTATHOUSANDTINYCREATURESTIRBENEATHTHESOILANDTHETREESWHILETHEUNSEENSTARSABOVESHINEDOWNWITHACOSMICGAZETHEUNIVERSEISVASTANDANCIENTITSSECRETSCARRIEDONTHEWHISPERSOFTHEWINDTHEMYSTERYOFTHELIFETHATFILLSTHEFORESTISAMIRACLEINVISIBLETOALLWHOBLINKINTHESUNLITDAYYETINTHEHEARTOFTHENIGHTTHEWORLDSINGSITSQUIETSONGANETERNALMELODYTHATHASBEENSINCEFIRSTLIGHTTOUCHEDITSGROUNDTHEPASTTHEPRESENTANDFUTURECOEXISTINTHEPRESENCEOFTHISMUSICWOVENTHROUGHNATUREWITHINFINITEGRACETHEMOONHOLDSTHEWORLDINITSPEACEFULEMBRACEASITLIGHTSTHEWAYFORALLTHATDREAMINTHEDARKNESS"

    def test_key_length_4(self):
        """
        Test the cracking algorithm but with a starting key in the algorithm to try and find the result quickly
        :return:
        """
        key = Playfair("WISKUNDE")
        encrypted = key.encrypt(self.text)

        found_key, plaintext = cracking(encrypted, True, start_key="WISKUNDE")
        self.assertEqual(found_key, key.matrix_obj.get_matrix_as_string(), "Not the correct keyword found")
        self.assertEqual(plaintext, self.text, "Not the same text found")


if __name__ == '__main__':
    unittest.main()
